library(corrplot)
ntrain<-select_if(train, is.numeric)
ntrain %>%
keep(is.numeric) %>%                     # Keep only numeric columns
gather() %>%                             # Convert to key-value pairs
ggplot(aes(value)) +                     # Plot the values
facet_wrap(~ key, scales = "free") +   # In separate panels
geom_bar()                         # as density
ntrain %>%
keep(is.numeric) %>%                     # Keep only numeric columns
gather() %>%                             # Convert to key-value pairs
ggplot(aes(value)) +                     # Plot the values
facet_wrap(~ key, scales = "free") +   # In separate panels
geom_density()                         # as density
ggplot(train, aes(x=BsmtFinSF12,y=SalePrice)) + geom_point() + ggtitle("Finished Basement SF vs Sale Price") + xlab("Finished Basement (BsmtFinSF1 + BsmtFinSF2)")
subset <- select(train, TotalBsmtSF, TotRmsAbvGrd, LotArea, SalePrice)
subcor <- cor(subset)
corrplot(subcor, method="square")
ggplot(train, aes(x=BsmtFinSF12,y=SalePrice)) + geom_point() + ggtitle("Finished Basement SF vs Sale Price") + xlab("Finished Basement (BsmtFinSF1 + BsmtFinSF2)")
subset <- select(train, TotalBsmtSF, TotRmsAbvGrd, LotArea, SalePrice)
subcor <- cor(subset)
corrplot(subcor, method="square")
subset <- select(train, TotalBsmtSF, TotRmsAbvGrd, LotArea, SalePrice)
subcor <- cor(subset)
par(mfrow=c(1,2))
ggplot(train, aes(x=BsmtFinSF12,y=SalePrice)) + geom_point() + ggtitle("Finished Basement SF vs Sale Price") + xlab("Finished Basement (BsmtFinSF1 + BsmtFinSF2)")
corrplot(subcor, method="square")
par(mfrow=c(1,2))
corrplot(subcor, method="square")
ggplot(train, aes(x=BsmtFinSF12,y=SalePrice)) + geom_point() + ggtitle("Finished Basement SF vs Sale Price") + xlab("Finished Basement (BsmtFinSF1 + BsmtFinSF2)")
t.test(train$TotalBsmtSF, train$SalePrice)
cor.test(train$TotalBsmtSF, train$SalePrice, method = "pearson" , conf.level = 0.99)
cor.test(train$TotalBsmtSF, train$SalePrice, method = "pearson" , conf.level = 0.99)
library(MASS)
min(train$BsmtFinSF12)
train$BsmtFinSF122 <- train$BsmtFinSF12 + 1/10000
min(train$BsmtFinSF122)
#fit an exp dist
fitexpd <- fitdistr(train$BsmtFinSF122, "exponential")
lam <- fitexpd$estimate
print(lam)
s <- rexp(1000, lam)
#histogram of old and new
par(mfrow=c(1,2))
hist(train$BsmtFinSF12, main="Original Data from Train", xlab="TotBsmtFin (1 and 2)")
hist(s, main="Sample Data")
summary(model2)
#fit a linear regression model
newdatacor = cor(trainsub)
# Split data in reg and train
#using ntrain from the 2nd question
n <- nrow(ntrain) #1460 rows of data
shuffle_ntrain <- ntrain[sample(n), ]
train_indices <- 1:round(0.7 * n)
trainsub <- shuffle_ntrain[train_indices, ]
test_indices <- (round(0.7 * n) + 1):n
testsub <- shuffle_ntrain[test_indices, ]
testsub[is.na(testsub)] <- 0
ntrain[is.na(ntrain)] <- 0
#fit a linear regression model
newdatacor = cor(trainsub)
corrplot(newdatacor)
model <- lm(SalePrice ~ ., data=trainsub)
summary(model)
plot(model$residuals ~ model$fitted.values)
#extract variables that are significant and rerun model
sigvars <- data.frame(summary(model)$coef[summary(model)$coef[,4] <= .05, 4])
sigvars <- add_rownames(sigvars, "vars")
colist<-dplyr::pull(sigvars, vars)
idx <- match(colist, names(trainsub))
trainsub2 <- cbind(trainsub[,idx], trainsub['SalePrice'])
model2<-lm(SalePrice ~ ., data=trainsub2)
summary(model2)
knitr::opts_chunk$set(echo = TRUE)
library(e1071)
library(dplyr)
library(purrr)
library(tidyr)
library(ggplot2)
library(corrplot)
library(FactoMineR)
library(VIF)
library(knitr)
library(kableExtra)
library(Hmisc)
# read data
train = read.csv(file="data/crime-training-data.csv")
train2<-train
dim(train)
#check data
summary(train) %>% kable() %>% kable_styling()
sapply(train, function(x) sum(is.na(x)))
ntrain<-select_if(train, is.numeric)
ntrain %>%
keep(is.numeric) %>%                     # Keep only numeric columns
gather() %>%                             # Convert to key-value pairs
ggplot(aes(value)) +                     # Plot the values
facet_wrap(~ key, scales = "free") +   # In separate panels
geom_density()
rcorr(as.matrix(train))
corrplot(cor(train), method="square")
# correlation test 1
cor.test(train$rad,train$tax,method="pearson")
#significant ignore
train$zn <- log(train$zn+1)
train$black <- log(train$black+1)
train$chas <- log(train$chas+1)
#remove rad per correlation in prior section
train <- train[, !(colnames(train) %in% c("rad"))]
#create variable
train$new <- train$tax / (train$medv*10)
rcorr(as.matrix(train))
corrplot(cor(train), method="square")
#MODEL 1
logit <- glm(target ~ ., data=train, family = "binomial" (link="logit"))
summary(logit)
exp(logit$coefficients)
logitscalar <- mean(dlogis(predict(logit, type = "link")))
logitscalar * coef(logit)
confint.default(model)
logit <- glm(target ~ ., data=train, family = "binomial" (link="logit"))
summary(logit)
exp(logit$coefficients)
logitscalar <- mean(dlogis(predict(logit, type = "link")))
logitscalar * coef(logit)
confint.default(logit)
predlogit <- predict(logit, type="response")
summary(predlogit)
table(true = train$target, pred = round(fitted(logit)))
logit <- glm(target ~ ., data=train, family = "binomial" (link="logit"))
summary(logit)
exp(logit$coefficients)
logitscalar <- mean(dlogis(predict(logit, type = "link")))
logitscalar * coef(logit)
confint.default(logit)
predlogit <- predict(logit, type="response")
train$pred1 <- predict(logit, type="response")
summary(predlogit)
table(true = train$target, pred = round(fitted(logit)))
head(train)
ggplot(data = train, aes(x = age, y = target)) +
geom_point(color = 'grey50') +
geom_line(aes(x = age, y = pred1), color = 'red', size = 0.3) +
theme_bw()
library(pROC)
library(pROC)
plot.roc(train$target, train$pred1)
data.frame(preds = pred1) %>%
ggplot(aes(x = pred1)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
train(preds = pred1) %>%
ggplot(aes(x = pred1)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
data.frame(preds = train$pred1) %>%
ggplot(aes(x = pred1)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
data.frame(train$pred1) %>%
ggplot(aes(x = pred1)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
data.frame(train$pred1)
data.frame(train$pred1) %>%
ggplot(aes(x = train.pred1)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
par(mfrow=c(3,1))
ggplot(data = train, aes(x = age, y = target)) +
geom_point(color = 'grey50') +
geom_line(aes(x = age, y = pred1), color = 'red', size = 0.3) +
theme_bw()
data.frame(train$pred1) %>%
ggplot(aes(x = train.pred1)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
library(pROC)
plot.roc(train$target, train$pred1)
par(mfrow=c(3,1))
ggplot(data = train, aes(x = age, y = target)) +
geom_point(color = 'grey50') +
geom_line(aes(x = age, y = pred1), color = 'red', size = 0.3) +
theme_bw()
data.frame(train$pred1) %>%
ggplot(aes(x = train.pred1)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
plot.roc(train$target, train$pred1)
plot.roc(train$target, train$pred1)
plot.roc(train$target, train$pred1)
ggplot(data = train, aes(x = age, y = target)) +
geom_point(color = 'grey50') +
geom_line(aes(x = age, y = pred2), color = 'red', size = 0.3) +
theme_bw()
data.frame(train$pred1) %>%
ggplot(aes(x = train.pred2)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
plot.roc(train$target, train$pred2)
logit2 <- glm(target ~ ., data=trainmod2, family = "binomial" (link="logit"))
#plots for Model 2
ggplot(data = train, aes(x = age, y = target)) +
geom_point(color = 'grey50') +
geom_line(aes(x = age, y = pred2), color = 'red', size = 0.3) +
theme_bw()
#extract variables that are significant and rerun model
sigvars <- data.frame(summary(logit)$coef[summary(logit)$coef[,4] <= .05, 4])
sigvars <- add_rownames(sigvars, "vars")
colist<-dplyr::pull(sigvars, vars)
colist<-colist[2:11]
idx <- match(colist, names(train))
trainmod2 <- cbind(train[,idx], train2['target'])
logit2 <- glm(target ~ ., data=trainmod2, family = "binomial" (link="logit"))
summary(logit2)
exp(logit2$coefficients)
logit2scalar <- mean(dlogis(predict(logit2, type = "link")))
logit2scalar * coef(logit2)
predlogit2 <- predict(logit2, type="response")
train$pred2 <- predict(logit2, type="response")
summary(predlogit2)
table(true = train$target, pred = round(fitted(logit2)))
ggplot(data = train, aes(x = age, y = target)) +
geom_point(color = 'grey50') +
geom_line(aes(x = age, y = pred2), color = 'red', size = 0.3) +
theme_bw()
data.frame(train$pred2) %>%
ggplot(aes(x = train.pred2)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
plot.roc(train$target, train$pred2)
plot.roc(train$target, train$pred2)
data.frame(train$pred2) %>%
ggplot(aes(x = train.pred2)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
ggplot(data = train, aes(x = age, y = target)) +
geom_point(color = 'grey50') +
geom_line(aes(x = age, y = pred2), color = 'red', size = 0.3) +
theme_bw()
ggplot(data = train, aes(x = age, y = target)) +
geom_point(color = 'grey50') +
geom_point(aes(x = age, y = pred2), color = 'red', size = 0.3) +
theme_bw()
logit3<-model <- glm(target ~ zn + indus + nox + rm + age + dis + tax + ptratio + medv + new, data=train, family = "binomial" (link="logit"))
summary(logit3)
exp(logit3$coefficients)
predlogit3 <- predict(logit3, type="response")
train$pred3 <- predict(logit3, type="response")
summary(predlogit3)
table(true = train$target, pred = round(fitted(logit3)))
ggplot(data = train, aes(x = age, y = target)) +
geom_point(color = 'grey50') +
geom_line(aes(x = age, y = pred3), color = 'red', size = 0.3) +
theme_bw()
data.frame(train$pred3) %>%
ggplot(aes(x = train.pred3)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
plot.roc(train$target, train$pred3)
plot.roc(train$target, train$pred3)
setwd("~/Documents/GitHub/data621/Week3")
summary(predlogit2)
#MODEL 1
logit <- glm(target ~ ., data=train, family = "binomial" (link="logit"))
summary(logit)
exp(logit$coefficients)
logitscalar <- mean(dlogis(predict(logit, type = "link")))
logitscalar * coef(logit)
confint.default(logit)
predlogit <- predict(logit, type="response")
train$pred1 <- predict(logit, type="response")
summary(predlogit)
table(true = train$target, pred = round(fitted(logit)))
#plots for Model 1
ggplot(data = train, aes(x = age, y = target)) +
geom_point(color = 'grey50') +
geom_line(aes(x = age, y = pred1), color = 'red', size = 0.3) +
theme_bw()
data.frame(train$pred1) %>%
ggplot(aes(x = train.pred1)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
plot.roc(train$target, train$pred1)
#extract variables that are significant and rerun model
sigvars <- data.frame(summary(logit)$coef[summary(logit)$coef[,4] <= .05, 4])
sigvars <- add_rownames(sigvars, "vars")
colist<-dplyr::pull(sigvars, vars)
colist<-colist[2:11]
idx <- match(colist, names(train))
trainmod2 <- cbind(train[,idx], train2['target'])
colist
knitr::opts_chunk$set(echo = TRUE)
library(e1071)
library(dplyr)
library(purrr)
library(tidyr)
library(ggplot2)
library(corrplot)
library(FactoMineR)
library(VIF)
library(knitr)
library(kableExtra)
library(Hmisc)
library(pROC)
# read data
train = read.csv(file="data/crime-training-data.csv")
train2<-train
dim(train)
#check data
summary(train) %>% kable() %>% kable_styling()
sapply(train, function(x) sum(is.na(x)))
ntrain<-select_if(train, is.numeric)
ntrain %>%
keep(is.numeric) %>%                     # Keep only numeric columns
gather() %>%                             # Convert to key-value pairs
ggplot(aes(value)) +                     # Plot the values
facet_wrap(~ key, scales = "free") +   # In separate panels
geom_density()
rcorr(as.matrix(train))
corrplot(cor(train), method="square")
# correlation test 1
cor.test(train$rad,train$tax,method="pearson")
#significant ignore
train$zn <- log(train$zn+1)
train$black <- log(train$black+1)
train$chas <- log(train$chas+1)
#remove rad per correlation in prior section
train <- train[, !(colnames(train) %in% c("rad"))]
#create variable
train$new <- train$tax / (train$medv*10)
rcorr(as.matrix(train))
corrplot(cor(train), method="square")
#MODEL 1
logit <- glm(target ~ ., data=train, family = "binomial" (link="logit"))
summary(logit)
exp(logit$coefficients)
logitscalar <- mean(dlogis(predict(logit, type = "link")))
logitscalar * coef(logit)
confint.default(logit)
predlogit <- predict(logit, type="response")
train$pred1 <- predict(logit, type="response")
summary(predlogit)
table(true = train$target, pred = round(fitted(logit)))
#plots for Model 1
ggplot(data = train, aes(x = age, y = target)) +
geom_point(color = 'grey50') +
geom_line(aes(x = age, y = pred1), color = 'red', size = 0.3) +
theme_bw()
data.frame(train$pred1) %>%
ggplot(aes(x = train.pred1)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
plot.roc(train$target, train$pred1)
sigvars <- data.frame(summary(logit)$coef[summary(logit)$coef[,4] <= .05, 4])
sigvars <- add_rownames(sigvars, "vars")
colist<-dplyr::pull(sigvars, vars)
colist<-colist[2:11]
colist
knitr::opts_chunk$set(echo = TRUE)
library(e1071)
library(dplyr)
library(purrr)
library(tidyr)
library(ggplot2)
library(corrplot)
library(FactoMineR)
library(VIF)
library(knitr)
library(kableExtra)
library(Hmisc)
library(pROC)
# read data
train = read.csv(file="data/crime-training-data.csv")
train2<-train
dim(train)
#check data
summary(train) %>% kable() %>% kable_styling()
sapply(train, function(x) sum(is.na(x)))
ntrain<-select_if(train, is.numeric)
ntrain %>%
keep(is.numeric) %>%                     # Keep only numeric columns
gather() %>%                             # Convert to key-value pairs
ggplot(aes(value)) +                     # Plot the values
facet_wrap(~ key, scales = "free") +   # In separate panels
geom_density()
rcorr(as.matrix(train))
corrplot(cor(train), method="square")
# correlation test 1
cor.test(train$rad,train$tax,method="pearson")
#significant ignore
train$zn <- log(train$zn+1)
train$black <- log(train$black+1)
train$chas <- log(train$chas+1)
#remove rad per correlation in prior section
train <- train[, !(colnames(train) %in% c("rad"))]
#create variable
train$new <- train$tax / (train$medv*10)
rcorr(as.matrix(train))
corrplot(cor(train), method="square")
logit <- glm(target ~ ., data=train, family = "binomial" (link="logit"))
summary(logit)
exp(logit$coefficients)
logitscalar <- mean(dlogis(predict(logit, type = "link")))
logitscalar * coef(logit)
confint.default(logit)
predlogit <- predict(logit, type="response")
train2$pred1 <- predict(logit, type="response")
summary(predlogit)
table(true = train$target, pred = round(fitted(logit)))
#plots for Model 1
ggplot(data = train, aes(x = age, y = target)) +
geom_point(color = 'grey50') +
geom_line(data = train2, aes(x = age, y = pred1), color = 'red', size = 0.3) +
theme_bw()
data.frame(train2$pred1) %>%
ggplot(aes(x = train2.pred1)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
plot.roc(train$target, train2$pred1)
sigvars <- data.frame(summary(logit)$coef[summary(logit)$coef[,4] <= .05, 4])
sigvars <- add_rownames(sigvars, "vars")
colist<-dplyr::pull(sigvars, vars)
colist<-colist[2:11]
idx <- match(colist, names(train))
trainmod2 <- cbind(train[,idx], train2['target'])
logit2 <- glm(target ~ ., data=trainmod2, family = "binomial" (link="logit"))
summary(logit2)
exp(logit2$coefficients)
logit2scalar <- mean(dlogis(predict(logit2, type = "link")))
logit2scalar * coef(logit2)
predlogit2 <- predict(logit2, type="response")
train2$pred2 <- predict(logit2, type="response")
summary(predlogit2)
logit2 <- glm(target ~ ., data=trainmod2, family = "binomial" (link="logit"))
summary(logit2)
exp(logit2$coefficients)
logit2scalar <- mean(dlogis(predict(logit2, type = "link")))
logit2scalar * coef(logit2)
predlogit2 <- predict(logit2, type="response")
train2$pred2 <- predict(logit2, type="response")
summary(predlogit2)
table(true = train$target, pred = round(fitted(logit2)))
head(train2)
ggplot(data = train, aes(x = age, y = target)) +
geom_point(color = 'grey50') +
geom_line(data = train2, aes(x = age, y = pred2), color = 'red', size = 0.3) +
theme_bw()
data.frame(train2$pred2) %>%
ggplot(aes(x = train2.pred2)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
plot.roc(train$target, train2$pred2)
logit3<-model <- glm(target ~ zn + indus + nox + rm + age + dis + tax + ptratio + medv + new, data=train, family = "binomial" (link="logit"))
summary(logit3)
exp(logit3$coefficients)
predlogit3 <- predict(logit3, type="response")
train2$pred3 <- predict(logit3, type="response")
summary(predlogit3)
table(true = train$target, pred = round(fitted(logit3)))
#plots for Model 2
ggplot(data = train, aes(x = age, y = target)) +
geom_point(color = 'grey50') +
geom_line(data = train2, aes(x = age, y = pred3), color = 'red', size = 0.3) +
theme_bw()
data.frame(train2$pred3) %>%
ggplot(aes(x = train2.pred3)) +
geom_histogram(bins = 50, fill = 'grey50') +
labs(title = 'Histogram of Predictions') +
theme_bw()
plot.roc(train$target, train2$pred3)
logit3scalar <- mean(dlogis(predict(logit3, type = "link")))
logit3scalar * coef(logit3)
round(logitscalar * coef(logit),2)
round(logit2scalar * coef(logit2),2)
round(logit3scalar * coef(logit3),2)
test = read.csv(file="data/crime-evaluation-data.csv")
test2<- test
dim(test)
# transform data using log for skewed
test$zn <- log(test$zn+1)
test$black <- log(test$black+1)
test$chas <- log(test$chas+1)
#remove rad per correlation in prior section
test <- test[, !(colnames(test) %in% c("rad"))]
#create variable
test$new <- test$tax / (test$medv*10)
idx <- match(colist, names(test))
testNorm2 <- test[,idx]
summary(testNorm2)
modelfinal <- predict(logit2, newdata = testNorm2, type="response")
y_pred_num <- ifelse(modelfinal > 0.5, 1, 0)
y_pred <- factor(y_pred_num, levels=c(0, 1))
summary(y_pred)
rbind(summary(predlogit2), summary(modelfinal)) %>% kable()
rbind(round(summary(predlogit2),2), round(summary(modelfinal),2)) %>% kable()
rbind(round(summary(predlogit2),4), round(summary(modelfinal),4)) %>% kable()
